---
import { Image } from "astro:assets";
import BaseLayout from "./BaseLayout.astro";
import { Project } from "../models/Project";

const raw = (Astro.props as any).frontmatter ?? Astro.props;
const project = new Project(raw);

const formattedDate = project.formattedDate;
const cover = project.imageUrl;
const coverAlt = project.imageAlt;
const contributors = project.contributors;
const skills = project.skills;
const links = project.links;
---


<BaseLayout pageTitle={project.title}>
    <article class="post-card">
        {cover ? (
            <figure class="post-cover">
                <img src={cover} alt={coverAlt} />
            </figure>
        ) : null}

        <header class="post-hero">
            <h1>{project.title}</h1>
            <div class="meta">
                <span class="meta-author">Par {contributors.join(', ')}</span>
                <span class="meta-sep">·</span>
                <time class="meta-date">{formattedDate}</time>
            </div>
            {project.description ? <p class="excerpt">{project.description}</p> : null}

            {skills.length ? (
                <h2>Compétences :</h2>
                <div class="skills" aria-hidden="true">
                    {
                        skills.map((skill: string | null | undefined) => {
                            return <Image class="skill" inferSize={true} src={`/icons/${skill}.svg`} alt={skill || ''} width={24} height={24} title={skill || ''} />;
                        })
                    }
                </div>
            ) : null}

            {links.length ? (
                <h2>Liens :</h2>
                <div class="links" aria-hidden="true">
                    {
                        links.map((link: { url?: string | URL | null | undefined; label?: string | null | undefined }) => {
                            const label = String(link.label ?? 'lien');
                            return <div class="link">
                                <Image src={`/icons/${label.toLowerCase()}.svg`} inferSize={true} alt={label} width={24} height={24} title={label} />
                                <a href={link.url} target="_blank" rel="noopener noreferrer">{link.url}</a>
                            </div>;
                        })
                    }
                </div>
            ) : null}
        </header>

        <section class="post-content">
            <slot />
        </section>
    </article>
</BaseLayout>

<style>
    .post-card {
        max-width: 920px;
        margin: 2rem auto;
        padding: 0;
        background: white;
        border-radius: 12px;
        box-shadow: 0 6px 20px rgba(16,24,40,0.06);
        overflow: hidden;
    }

    .post-hero {
        padding: 2.25rem 1.25rem;
        border-bottom: 1px solid var(--border-color);
        background: linear-gradient(180deg, rgba(52,152,219,0.04), transparent 60%);
    }

    .post-hero h1 {
        font-size: 2rem;
        line-height: 1.15;
        margin: 0 0 0.5rem 0;
    }

    .meta {
        display: flex;
        gap: 0.5rem;
        align-items: center;
        color: var(--text-secondary-color);
        font-size: 0.95rem;
    }

    .post-content {
        padding: 1.5rem 1.5rem 2.25rem 1.5rem;
        line-height: 1.75;
        color: var(--text-color);
    }

    .post-content img {
        max-width: 100%;
        border-radius: 8px;
        display: block;
        margin: 1rem auto;
    }

    .post-content pre {
        background: #0f172a;
        color: #e6edf3;
        padding: 1rem;
        border-radius: 8px;
        overflow: auto;
    }

    .post-content blockquote {
        border-left: 4px solid var(--primary-color);
        padding-left: 1rem;
        color: var(--text-secondary-color);
        margin: 1rem 0;
        font-style: italic;
    }

    /* post cover */
    .post-cover img {
        width: 100%;
        height: 320px;
        object-fit: cover;
        display: block;
    }

    .excerpt {
        margin-top: 0.75rem;
        color: var(--text-secondary-color);
    }

    .skills {
        display: flex;
        color: var(--primary-color);
        align-items: flex-start;
        gap: 0.5rem;
    }

    .skills {
        margin-top: 1rem;
    }

    .links {
        display: flex;
        margin-top: 1rem;
        gap: 1rem;
    }

    .link {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        color: var(--text-color);
    }
</style>
